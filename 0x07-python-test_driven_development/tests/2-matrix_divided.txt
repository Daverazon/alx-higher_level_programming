>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

:: The funtion will raise ZeroDivisionError if 2nd argument is zero

>>> matrix_divided([[1, 2], [5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

:: The function expects the 2nd argument to be a number (int or float)

>>> matrix_divided([[1, 2], [5, 6]], None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2], [5, 6]], [3])
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2], [5, 6]], "3")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2], [5, 6]], (3, ))
Traceback (most recent call last):
TypeError: div must be a number

:: The function expects each list/row in the matrix to be of same length

>>> matrix_divided([[1, 2], [5, 6], [4.65]], 65)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2], [4, 5, 6], [4.65]], 65)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[5, 6], [4.65, 5, 9]], 65)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

:: But it won't give any errors if empty matrix is passed

>>> matrix_divided([[]], 65)
[[]]

:: The 1st argument must be a matrix (list of lists)

>>> matrix_divided([[1, 2], 3, [5, 4]], 65)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([3.4, 3, 5], 65)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], (7, 84), [5, 4]], 65)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

:: The elements of 1st argument must either be integers or floats

>>> matrix_divided([[1, '2'], [5, 4]], 65)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, None], [2.87, 4]], 65)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, [5, 2]], [5, 4]], 65)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

::

>>> matrix_divided([[1, 2], [float('NaN'), 4]], 65)
[[0.02, 0.03], [nan, 0.06]]

::

>>> matrix_divided([[1, 2], [float('inf'), 4]], 65)
[[0.02, 0.03], [inf, 0.06]]